//
//  NVMapViewController.m
//  nvpolyline
//
//  Created by William Lachance on 10-03-30.
//  Inspired by code and ideas from Craig Spitzkoff and Nicolas Neubauer 2009.
//

#import "NVMapViewController.h"
#import "NVPolylineAnnotationView.h"
#import <QuartzCore/QuartzCore.h>

@implementation NVMapViewController
- (id)initWithPoints:(NSArray *)points {
    self = [super init];
    _points = points;
    
    return self;
}

- (void)loadView {
	[super loadView];
	
	_mapView = [[[MKMapView alloc] initWithFrame:CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height)] autorelease];
	[_mapView setDelegate:self];
	[self.view addSubview:_mapView];
    
    UIButton *button = [UIButton buttonWithType:UIButtonTypeRoundedRect];
    
    //set the position of the button
    button.frame = CGRectMake(10, 25, 25, 25);
    
    //set the button's title
    [button setTitle:@"Back" forState:UIControlStateNormal];
    
    [button addTarget:self action:@selector(backPressed)
     forControlEvents:UIControlEventTouchUpInside];
    
    //add the button to the view
    [_mapView addSubview:button];

	// a drive from Dorval to Westmount, Quebec, Canada... as generated by Google Earth
	/*NSArray *points = [NSArray arrayWithObjects:
					   [[[CLLocation alloc] initWithLatitude:45.43894 longitude:-73.7396] autorelease],
					   [[[CLLocation alloc] initWithLatitude:45.44073 longitude:-73.73998] autorelease],
					   [[[CLLocation alloc] initWithLatitude:45.44082000000001 longitude:-73.73992] autorelease],
					   [[[CLLocation alloc] initWithLatitude:45.44382 longitude:-73.74069] autorelease],
					   [[[CLLocation alloc] initWithLatitude:45.44612 longitude:-73.74122] autorelease],
					   [[[CLLocation alloc] initWithLatitude:45.44612 longitude:-73.74122] autorelease],
					   [[[CLLocation alloc] initWithLatitude:45.44628 longitude:-73.74119] autorelease],
					   nil];*/
					   
	NVPolylineAnnotation *annotation = [[[NVPolylineAnnotation alloc] initWithPoints:_points mapView:_mapView] autorelease];
	[_mapView addAnnotation:annotation];	
	
	// use some magic numbers to create a map region
	MKCoordinateRegion region;
	region.span.longitudeDelta = 0.01;
	region.span.latitudeDelta = 0.01;
	region.center.latitude = 19.297595;
	region.center.longitude = -99.080307;
	[_mapView setRegion:region];
}

-(void)backPressed {
    [self dismissModalViewControllerAnimated:true];
}

- (MKAnnotationView *)mapView:(MKMapView *)mapView viewForAnnotation:(id <MKAnnotation>)annotation {

	if ([annotation isKindOfClass:[NVPolylineAnnotation class]]) {
		return [[[NVPolylineAnnotationView alloc] initWithAnnotation:annotation mapView:_mapView] autorelease];
	}
		 
	return nil;
}

// Find any polyline annotation and update its region.
- (void)updatePolylineAnnotationView {
	for (NSObject *a in [_mapView annotations]) {
		if ([a isKindOfClass:[NVPolylineAnnotation class]]) {
			NVPolylineAnnotation *polyline = (NVPolylineAnnotation *)a;
			
			NSObject *pv = (NSObject *)[_mapView viewForAnnotation:polyline];
			if ([pv isKindOfClass:[NVPolylineAnnotationView class]]) {
				NVPolylineAnnotationView *polylineView = 
					(NVPolylineAnnotationView *)[_mapView viewForAnnotation:polyline];
				
				[polylineView regionChanged];
			}
		}		
	}
}

- (void)dealloc {
    [super dealloc];
}

# pragma mark - MKMapViewDelegate

- (void) mapView:(MKMapView *)mapView didAddAnnotationViews:(NSArray *)views {
	// fixes that some marker are behind the polyline
	for (int i=0; i<[views count]; i++) {
		MKAnnotationView *view = [views objectAtIndex:i];
		if ([view isKindOfClass:[NVPolylineAnnotationView class]]) {
			[[view superview] sendSubviewToBack:view];
			
			/* In iOS version above 4.0 we need to update the polyline view after it
			 has been added to the mapview and it ready to be displayed. */
			NSString *reqSysVer = @"4.0";
			NSString *currSysVer = [[UIDevice currentDevice] systemVersion];
			if ([currSysVer compare:reqSysVer options:NSNumericSearch] != NSOrderedAscending) {
				[self updatePolylineAnnotationView];
			}
		}
	}
}

- (void)mapView:(MKMapView *)mapView regionDidChangeAnimated:(BOOL)animated {
	/* In iOS version above 4.0 we need to update the polyline view after a region change */
	NSString *reqSysVer = @"4.0";
	NSString *currSysVer = [[UIDevice currentDevice] systemVersion];
	if ([currSysVer compare:reqSysVer options:NSNumericSearch] != NSOrderedAscending) {
		[self updatePolylineAnnotationView];
	}
}

@end
